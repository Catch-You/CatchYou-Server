buildscript {
	ext {
		springBootVersion = '3.1.5'	// spring boot 버전 확인
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath "io.spring.gradle:dependency-management-plugin:1.1.3"	// gradle 버전 확인
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
}

bootJar.enabled = false

// 하위 모든 프로젝트 공통 세팅
subprojects {
	apply plugin: 'java-library'
	apply plugin: 'idea'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	group 'com.catchyou' // 모듈 생성시 입력해주었던 이름 입력! 입력 안하고 생성했다면 com.example 임
	version '0.0.1-SNAPSHOT'

	sourceCompatibility = '17'	// 루트 모듈 생성시 선택했던 java 버전 입력
	targetCompatibility = '17'	//               "
	compileJava.options.encoding = 'UTF-8'

	repositories {
		mavenCentral()
	}

	// 하위 모듈에서 공통으로 사용하는 세팅 추가.
	// 루트 모듈 생성시 추가해주었던 종속성 항목들을 가져와 입력하면 된다.
	dependencies {
		api 'org.springframework.boot:spring-boot-starter-web'
		compileOnly 'org.projectlombok:lombok'
		developmentOnly 'org.springframework.boot:spring-boot-devtools'
		annotationProcessor 'org.projectlombok:lombok'
		annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testCompileOnly 'org.projectlombok:lombok'
		testAnnotationProcessor 'org.projectlombok:lombok'
	}

	configurations {
		complieOnly {
			extendsFrom annotationProcessor
		}
	}

	test {
		useJUnitPlatform()
	}
}
